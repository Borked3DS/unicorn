obj-y += helper.o vfp_helper.o
obj-y += cpu.o
obj-$(TARGET_AARCH64) += cpu64.o unicorn_aarch64.o
obj-$(TARGET_ARM) += unicorn_arm.o

obj-$(CONFIG_SOFTMMU) += arm-powerctl.o

DECODETREE = $(SRC_PATH)/scripts/decodetree.py

target/arm/decode-sve.inc.c: $(SRC_PATH)/target/arm/sve.decode $(DECODETREE)
	$(call quiet-command,\
	  $(PYTHON) $(DECODETREE) --decode disas_sve -o $@ $<,\
	  "GEN", $(TARGET_DIR)$@)

target/arm/decode-vfp.inc.c: $(SRC_PATH)/target/arm/vfp.decode $(DECODETREE)
	$(call quiet-command,\
	  $(PYTHON) $(DECODETREE) --static-decode disas_vfp -o $@ $<,\
	  "GEN", $(TARGET_DIR)$@)

target/arm/decode-vfp-uncond.inc.c: $(SRC_PATH)/target/arm/vfp-uncond.decode $(DECODETREE)
	$(call quiet-command,\
	  $(PYTHON) $(DECODETREE) --static-decode disas_vfp_uncond -o $@ $<,\
	  "GEN", $(TARGET_DIR)$@)

target/arm/translate-sve.o: target/arm/decode-sve.inc.c
target/arm/translate.o: target/arm/decode-vfp.inc.c
target/arm/translate.o: target/arm/decode-vfp-uncond.inc.c

obj-y += tlb_helper.o
obj-y += translate.o op_helper.o
obj-y += crypto_helper.o
obj-y += iwmmxt_helper.o vec_helper.o neon_helper.o

obj-$(CONFIG_SOFTMMU) += psci.o

obj-$(TARGET_AARCH64) += translate-a64.o helper-a64.o
obj-$(TARGET_AARCH64) += translate-sve.o sve_helper.o
obj-$(TARGET_AARCH64) += pauth_helper.o
